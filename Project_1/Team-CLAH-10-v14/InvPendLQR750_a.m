A = [0    1.0000         0         0;...         0   -7.4631   -3.6744         0;...         0         0         0    1.0000;...         0    9.2203   36.5168         0];B =[0;5.5966;0;-6.9143]%Use the following form for no control damping at the pendulum% Cstr=[1 0 1 0 ]% % Q=Cstr'*Cstr;%q1 = 1/(0.8*(pi/6)^2);             %table positionq2 = 1/(0.5*(pi)^2);              %table velocityq3 = 1/(0.02*(pi/6)^2);             %pendulum positionq4 = 1/(0.5*(pi)^2);              %pendulum velocityQ = [q1 0 0 0; 0 q2 0 0; 0 0 q3 0; 0 0 0 q4];CC = [1, 0, 1, 0]%Vary  R matrixR = 8;Klqr1=lqr(A,B,Q, R)Pcl1=eig(A-B*Klqr1)/2/pi%Create systems syslqrcl1=ss([A-B*Klqr1],B*Klqr1(:,1),CC,0);figure (1);pzmap(syslqrcl1); hold ontitle('LQR Controller, Closed Loop Poles For Various Control Effort Weights')xlabel('Real  (Hz)')ylabel('Imaginary  (Hz)')grid;hold; axis normal% User may define other labels & axis limits, frequencies in Hz.% Stike any key to continuefigure(2);%Generate impulses Responses at theta1 & theat2 to commanded stept=0:.01:5;implq1=impulse([A-B*Klqr1],B*Klqr1,CC,[0 0],1,t);%Step Response Plotplot(t,implq1),grid,axis([0,5,-2, 2]),gridxlabel('Time (s)'),ylabel('Amplitude') 